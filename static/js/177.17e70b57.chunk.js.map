{"version":3,"file":"static/js/177.17e70b57.chunk.js","mappings":"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","sources":["components/modal/styles.ts","components/styles/layout.ts","helpers/query/anime.tsx","page/AnimeDetail/styles.ts","components/modal/AddCollection.tsx","page/AnimeDetail/index.tsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const ContainerModal = styled.div({\n    position: \"fixed\",\n    zIndex: 1,\n    top: 0,\n    left: 0,\n    width: \"100vw\",\n    height: \"100vh\",\n    background: \"rgba(0, 0, 0, 0.4)\",\n    display: \"flex\", \n    justifyContent: \"center\",\n    alignItems: \"center\",\n    animation: \"in .25s ease-in-out\"\n})\n\nexport const Modal = styled.div({\n    background: \"#fafafa\",\n    borderRadius: 8,\n    boxShadow: \"0 2px 33px rgba(0,0,0,.48)\",\n    '& select': {\n        background: \"rgb(237,241,245)\",\n        border: \"none\",\n        padding: \"10px 20px\",\n        cursor: \"pointer\",\n        outline: \"none\"\n    }},\n    ({width, height}: {width?:number | string, height?: number | string}) => ({\n        width: width ?? \"50%\",\n        height: height ?? \"70%\",\n    })\n)\n\nexport const HeaderModal = styled.header(\n    {\n        height: \"35%\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"50% 35%\",\n        backgroundRepeat: \"no-repeat\",\n        position: \"relative\"\n    },\n)\n\nexport const BannerImage = styled.img({\n    height: \"100%\",\n    width: \"100%\",\n    zIndex: 0,\n    opacity: \"0.7\"\n})\n\nexport const CoverImage = styled.img({\n    position: \"absolute\",\n    left: \"8%\",\n    bottom: -50\n})\n\nexport const Title = styled.p({\n    fontSize: \"1.6rem\",\n    color: \"white\",\n    position: 'absolute',\n    left: \"25%\",\n    bottom: 0\n})\n\nexport const ButtonSave = styled.div({\n    position: \"absolute\",\n    right: \"5%\",\n    bottom: 0,\n    background: \"rgb(61,180,242)\",\n    borderRadius: 3,\n    color: \"white\",\n    cursor: \"pointer\",\n    fontSize: \"1.1rem\",\n    marginBottom: \"15px\",\n    padding: \"8px 14px\",\n    width: \"fit-content\",\n    '&:active': {\n        transform: \"translate(1px, 1px)\"\n    }\n})\n\nexport const IconClose = styled.img({\n    position: 'absolute',\n    top: 20,\n    right: \"5%\",\n    cursor: \"pointer\",\n    '&:hover': {\n        color: \"rgba(0, 0, 0, 1)\",\n    },\n    '&:active': {\n        opacity: \"0.6\",\n        transform: \"translate(1px, 1px)\"\n    }\n})\n\nexport const Button = styled.button(\n    {\n        padding: 10,\n        color: \"white\",\n        borderRadius: 5,\n        border: \"none\",\n        outline: \"none\",\n        cursor: \"pointer\",\n        '&:active' : {\n            opacity: \"0.7\",\n            transform: \"translate(1px, 1px)\"\n        }\n    },\n    ({background}:{background:string}) => ({\n        background,\n    })\n)","import styled from '@emotion/styled'\nimport { RowProps } from './types'\n\nexport const Row= styled.div(\n  {\n    display: 'flex',\n  },\n  (props:RowProps) => ({\n    gap: props.gap ?? 10,\n    alignItems: props.alignItems ?? \"flex-start\",\n    justifyContent: props.justifyContent ?? \"flex-start\",\n    marginTop: props.marginTop ?? 0,\n    margin: props.margin,\n    padding: props.padding,\n    background: props.background,\n    flex: props.flex,\n    height: props.height,\n    width: props.width,\n    alignSelf: props.alignSelf,\n    justifySelf: props.justifySelf\n  })\n)\n\nexport const Column = styled(Row)`\n  flex-direction: column;\n`","import { gql } from \"@apollo/client\"\n\nexport const GET_LIST_ANIME = gql`\nquery ($id: Int, $page: Int, $perPage: Int, $search: String) {\n\tPage (page: $page, perPage: $perPage) {\n\t\tpageInfo {\n\t\t\ttotal\n\t\t\tcurrentPage\n\t\t\tlastPage\n\t\t\thasNextPage\n\t\t\tperPage\n\t\t}\n\t\tmedia (id: $id, search: $search) {\n\t\t\tid\n\t\t\ttitle {\n\t\t\t\tenglish\n\t\t\t}\n\t\t\tcoverImage {\n\t\t\t\tlarge\n\t\t\t}\n\t\t}\n\t}\n}`\n\nexport const GET_ANIME_DETAIL = gql`\nquery ($id: Int) {\n\tMedia (id: $id) {\n\t\tid\n\t\ttitle {\n\t\t\tenglish\n\t\t}\n\t\tbannerImage\n\t\tdescription\n\t\tcoverImage {\n\t\t\tmedium\n\t\t}\n\t\tstatus\n\t\tchapters\n\t\tpopularity\n\t\tisFavourite\n\t\trankings {\n\t\t\tid\n\t\t\trank\n\t\t}\n\t}\n}`\n\nexport const GET_COLLECTION = gql`\n\tquery($userId: Int) {\n\t\tMediaListCollection(userId: $userId, type: ANIME) {\n\t\t\tlists {\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n`\n","import styled from '@emotion/styled'\n\nexport const ContainerDetail = styled.div({\n    background: \"#f5f5f5\",\n    display: \"flex\",\n    padding: \"30px 15%\",\n    gap: 30\n})\n\nexport const TitleAnime = styled.h1({\n    color: \"rgb(92,114,138)\",\n    margin: 0,\n    marginBottom: 10\n})\n\nexport const ButtonAdd = styled.button({\n    backgroundColor: \"rgb(61,180,242)\",\n    color: \"white\",\n    marginTop: 15,\n    padding: \"10px 20px\",\n    cursor: \"pointer\",\n    border: \"none\",\n    outline: 'none',\n    '&:active': {\n        transform: 'translate(1px, 1px)',\n        opacity: '0.7'\n    }\n})","import { FC, useState } from \"react\"\nimport { BannerImage, ButtonSave, ContainerModal, HeaderModal, IconClose, Modal, Title } from \"./styles\"\nimport { useUserContext } from \"../../context/UserContext\"\nimport { Column, Row } from \"../styles/layout\"\nimport { CoverImage } from \"./styles\"\nimport { H3, Text } from \"../styles/text\"\nimport { useNavigate } from \"react-router-dom\"\nimport { STATUS } from \"../../helpers/constants/anime\"\nimport { InputTypes, PropsAddCollection } from \"./types\"\n\nconst score = [1,2,3,4,5]\n\nconst AddCollection:FC<PropsAddCollection> = ({cover, title, closeModal, params}) => {\n  \n  const {user, saveUser} = useUserContext()\n  const [input, setInput] = useState<InputTypes>({\n    status: \"\",\n    episode: null,\n    score: null\n  })\n  const [isSuccess, setIsSuccess] = useState(false)\n\n  const handleSave = () => {\n    const collection = user.collection ?? {[input.status]: []}\n    const status = collection[input?.status] ? collection[input?.status] : []\n    const {episode, score} = input\n    saveUser({\n      ...user,\n      collection: {\n        ...collection,\n        [input.status]: [...status, {episode, score, cover, title}],\n      },\n      collectionFilm: {[title]: {status: input.status}}\n    })\n    setIsSuccess(true)\n    setTimeout(() => {\n      closeModal()\n    }, 1000)\n  }\n\n  return (\n    <ContainerModal>\n        <Modal>\n          <HeaderModal>\n            <BannerImage src={user.banner ?? \"\"} />\n            <IconClose src=\"/media/close.svg\" onClick={closeModal}/>\n            <CoverImage src={cover} alt=\"cover-image\" />\n            <Title>{title}</Title>\n            {!isSuccess && <ButtonSave onClick={handleSave}>Save</ButtonSave>}\n          </HeaderModal>\n          <Row marginTop={70} padding=\"0 8% 0 8%\" justifyContent={isSuccess ? \"center\" : \"space-between\"}>\n            {\n              isSuccess ? \n                <Column alignItems=\"center\">\n                  <img src='/media/success-circle.svg' alt=\"logo-success\" />\n                  <H3>Anime successfully added</H3>\n                </Column>\n                :\n                <>\n                  <Column>\n                    <Text size={14} weight={500}>Status</Text>\n                    <select onChange={(e) => setInput((prevState:InputTypes) => ({...prevState, status:e.target.value}))}>\n                      <option value=\"\" disabled selected>Status</option>\n                      {user.collectionList.map((value:string) => (\n                        <option\n                          value={value}\n                        >\n                          {value}\n                        </option>\n                      ))}\n                    </select>\n                  </Column>\n                  \n                  <Column>\n                    <Text size={14} weight={500}>Score</Text>\n                    <select onChange={(e) => setInput((prevState:InputTypes) => ({...prevState, score:parseInt(e.target.value)}))}>\n                      <option value=\"\" disabled selected>Score</option>\n                      {score.map((value) => (\n                        <option value={value}>{value}</option>\n                      ))}\n                    </select>\n                  </Column>\n                  \n                  <Column>\n                    <Text size={14} weight={500}>Episode</Text>\n                    <select onChange={(e) => setInput((prevState:InputTypes) => ({...prevState, episode:parseInt(e.target.value)}))}>\n                      <option value=\"\" disabled selected>Episode</option>\n                      {score.map((value) => (\n                        <option value={value}>{value}</option>\n                      ))}\n                    </select>\n                  </Column>\n                </>\n            }\n          </Row>\n        </Modal>\n    </ContainerModal>\n  )\n}\n\nexport default AddCollection","import { useQuery } from \"@apollo/client\"\nimport { GET_ANIME_DETAIL, GET_COLLECTION } from \"../../helpers/query/anime\"\nimport { useParams } from \"react-router-dom\"\nimport { useUserContext } from \"../../context/UserContext\"\nimport { useEffect, useState } from \"react\"\nimport { ButtonAdd, ContainerDetail, TitleAnime } from \"./styles\"\nimport Loader from \"../../components/loader\"\nimport AddCollection from \"../../components/modal/AddCollection\"\nimport { Text } from \"../../components/styles/text\"\n\nconst AnimeDetail = () => {\n\tconst {user, saveUser} = useUserContext()\n\tconst params = useParams()\n\tconst [isModalCollection, setIsModalCollection] = useState(false)\n\tconst {data, loading} = useQuery(GET_ANIME_DETAIL, {\n\t\tvariables:{id: params.id},\n\t\tonCompleted: (data) => saveUser({...user, banner: data?.Media.bannerImage})\n\t})\n\n\tconst {data: collectionData} = useQuery(GET_COLLECTION, {\n\t\tvariables: {userId: 5813837}\n\t})\n\t\n\tif(loading) return <Loader />\n\n  return (\n    <ContainerDetail>\n\t\t\t<div>\n\t\t\t\t<img src={data?.Media.coverImage.medium} alt=\"cover-image\" />\n\t\t\t\t{\n\t\t\t\t\tuser?.collectionFilm && user?.collectionFilm[data?.Media.title.english] ? \n\t\t\t\t\t\t<p>Status: \n\t\t\t\t\t\t\t<Text link={true} size={14} color=\"#1c439b\">{user?.collectionFilm[data?.Media.title.english]?.status}</Text>\n\t\t\t\t\t\t</p> : \n\t\t\t\t\t\t<ButtonAdd onClick={() => setIsModalCollection(true)}>Add to list</ButtonAdd>\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<TitleAnime>{data?.Media.title.english}</TitleAnime>\n\t\t\t\t<Text color=\"rgb(92,114,138)\" size={16}>{data?.Media.description}</Text>\n\t\t\t</div>\n\t\t\t{\n\t\t\tisModalCollection && \n\t\t\t\t<AddCollection \n\t\t\t\t\tcover={data?.Media.coverImage.medium}\n\t\t\t\t\ttitle={data?.Media.title.english}\n\t\t\t\t\tcloseModal={() => setIsModalCollection(false)}\n\t\t\t\t\tparams={params}\n\t\t\t\t/>\n\t\t\t}\n\t\t</ContainerDetail>\n  )\n}\n\nexport default AnimeDetail"],"names":["ContainerModal","styled","div","position","zIndex","top","left","width","height","background","display","justifyContent","alignItems","animation","Modal","borderRadius","boxShadow","border","padding","cursor","outline","_ref","HeaderModal","header","backgroundSize","backgroundPosition","backgroundRepeat","BannerImage","img","opacity","CoverImage","bottom","Title","p","fontSize","color","ButtonSave","right","marginBottom","transform","IconClose","Button","button","_ref2","Row","props","_props$gap","_props$alignItems","_props$justifyContent","_props$marginTop","gap","marginTop","margin","flex","alignSelf","justifySelf","Column","_templateObject","_taggedTemplateLiteral","GET_LIST_ANIME","gql","GET_ANIME_DETAIL","_templateObject2","GET_COLLECTION","_templateObject3","ContainerDetail","TitleAnime","h1","ButtonAdd","backgroundColor","score","_user$banner","cover","title","closeModal","_useUserContext","params","useUserContext","user","saveUser","_useState","useState","status","episode","_useState2","_slicedToArray","input","setInput","_useState3","_useState4","isSuccess","setIsSuccess","_jsx","children","_jsxs","src","banner","onClick","alt","_user$collection","collection","_defineProperty","_objectSpread","concat","_toConsumableArray","collectionFilm","setTimeout","H3","_Fragment","Text","size","weight","onChange","e","prevState","target","value","disabled","selected","collectionList","map","parseInt","_user$collectionFilm$","useParams","isModalCollection","setIsModalCollection","_useQuery","useQuery","variables","id","onCompleted","data","Media","bannerImage","loading","userId","Loader","coverImage","medium","english","link","description","AddCollection"],"sourceRoot":""}